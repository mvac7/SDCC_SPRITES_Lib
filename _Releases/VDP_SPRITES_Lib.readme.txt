VDP SPRITES MSX SDCC Library (fR3eL Project)

Version: 1.0 (04/05/2019)
Author: mvac7 [mvac7303b@gmail.com]
Architecture: MSX
Format: C Object (SDCC .rel)
Programming language: C and Z80 assembler




History of versions:
- v1.0 (1.0 (04/05/2019) May the 4th be with you!



 
>>> Sorry!: This text is pending correction of the English translation. <<<<<<<<


--------------------------------------------------------------------------------
Index:

1) Introduction
2) Acknowledgments
3) Requirements
4) Notes about operation
5) Functions
  5.1)  PUTSPRITE
  5.2)  SetSpritePattern
  5.3)  SetSpriteColor
  5.4)  SetSpritePosition
  5.5)  SetSpriteVisible
  5.6)  SetEarlyClock
  5.7)  UnsetEarlyClock
   

   
--------------------------------------------------------------------------------
1) Introduction:

Open Source library with functions to directly access to Sprites of the 
TMS9918A.

Provides a set of functions for displaying Sprites, both fully (PUTSPRITE) and 
specific (positioning, color, pattern, visibility and EarlyClock).

Contains the PUTSPRITE function similar to that of MSX BASIC.

Requires the VDP TMS9918A MSX SDCC Library (fR3eL Project).
     https://github.com/mvac7/SDCC_TMS9918A_Lib

It does not use the MSX BIOS, so it is suitable for creating applications for 
MSXDOS and ROM format.
  
Use them for developing MSX applications using Small Device C Compiler (SDCC) 
compilator.

In the source code (\examples), you can find applications for testing and 
learning purposes.

This library is part of the MSX fR3eL Project
      https://github.com/mvac7/SDCC_MSX_fR3eL

Enjoy it!


                             
                                                          
--------------------------------------------------------------------------------
2) Acknowledgments

I want to give a special thanks to all those who freely share their knowledge 
with the MSX developer community.

* Avelino Herrera > http://msx.atlantes.org/index_es.html
* Nerlaska > http://albertodehoyonebot.blogspot.com.es
* Marq/Lieves!Tuore > http://www.kameli.net/marq/  http://www.kameli.net/lt/
* Fubukimaru https://github.com/Fubukimaru http://www.gamerachan.org/fubu/
* Andrear > http://andrear.altervista.org/home/msxsoftware.php
* Ramones > https://www.msxblog.es/tutoriales-de-programacion-en-ensamblador-ramones/
            MSXbanzai http://msxbanzai.tni.nl/dev/faq.html
* Sapphire/Z80ST > http://z80st.auic.es/
* Fernando García > https://www.youtube.com/user/bitvision
* Eric Boez > https://github.com/ericb59
* MSX Assembly Page > http://map.grauw.nl/resources/msxbios.php
* Portar MSX Tech Doc > https://problemkaputt.de/portar.htm
* MSX Resource Center > http://www.msx.org/
* Karoshi MSX Community (RIP 2007-2020)
* BlueMSX emulator > http://www.bluemsx.com/
* OpenMSX emulator > http://openmsx.sourceforge.net/
* Meisei emulator > ?
 

 
--------------------------------------------------------------------------------
3) Requirements:

  * Small Device C Compiler (SDCC) v3.9 
    http://sdcc.sourceforge.net/
  
  * Hex2bin v2.5 
    http://hex2bin.sourceforge.net/ 
   
  * VDP TMS9918A MSX SDCC Library (fR3eL Project)
    https://github.com/mvac7/SDCC_TMS9918A_Lib




--------------------------------------------------------------------------------
4) Notes about operation

This library provides functions to facilitate the use of Sprites of the TMS9918A 
and is supported by the library VDP_TMS9918A_Lib, necessary for the 
initialization of the graphic modes and for the writing / reading of the VRAM.

It is designed for the creation of applications for MSX-DOS (.COM). It can be 
used for the development of ROMs, but I recommend the use of libraries based on 
the BIOS (VDP_TMS9918A_MSXROM_Lib and VDP_SPRITES_MSXROM_Lib), since they are 
lighter, thereby gaining more space for our software.

It is not useful for graphic mode G3 (screen 4), V9938 or higher, since it does 
not write in the color table of the sprites when a color is assigned or for the 
Early Clock. I have projected a specific library for this purpose.

    


--------------------------------------------------------------------------------
5) Functions



================================================================================
5.1) PUTSPRITE

 Function :
            void PUTSPRITE(char plane, char x, char y, char color, char pattern)
                             
 Description:
            Displays the sprite pattern.
            
 Input    : 
            [char] sprite plane (0-31) 
            [char] x 
            [char] y
            [char] color (0-15)
            [char] pattern
            
 Output   : -
 
 Examples :
            PUTSPRITE(4, 100, 80, 6, 2);
            
            PUTSPRITE(0, X, Y, WHITE, 10);  //Color label requires include a VDP_TMS9918A.h



================================================================================
5.2) SetSpritePattern

 Function :
            void SetSpritePattern(char plane, char pattern)
             
 Description:
            Assign a pattern to a sprite plane.
            
 Input    : 
            [char] sprite plane (0-31) 
            [char] pattern
                     
 Output   : -
 
 Examples :
            SetSpritePattern(4, 2);
            
            SetSpritePattern(7, i);



================================================================================
5.3) SetSpriteColor

 Function :
            void SetSpriteColor(char plane, char color)
               
 Description:
            Assign a color to a sprite plane.
            
 Input    : 
            [char] sprite plane (0-31) 
            [char] color (0-15)
                     
 Output   : -
 
 Examples :
            SetSpriteColor(4, 6);
            
            SetSpriteColor(7, DARK_RED); //Color label requires include a VDP_TMS9918A.h



================================================================================
5.4) SetSpritePosition

 Function :
            void SetSpritePosition(char plane, char x, char y)
                          
 Description:
            Assigns the position coordinates of a sprite plane.
            
 Input    : 
            [char] sprite plane (0-31) 
            [char] x 
            [char] y
                       
 Output   : -
 
 Examples :
            SetSpritePosition(4, 100, 80);



================================================================================
5.5) SetSpriteVisible

 Function :
            void SetSpriteVisible(char plane, boolean state)
                          
 Description:
            Hides or shows a sprite plane.
            
 Input    : 
            [char] sprite plane (0-31) 
            [boolean] visible state
                      
 Output   : -
 
 Examples :
            SetSpriteVisible(4,false);



================================================================================
5.6) SetEarlyClock

 Function :
            void SetEarlyClock(char plane)
                          
 Description:
            Apply the Early Clock of a sprite plane. Move 32 points to the left           
            the X position of the sprite.
            
 Input    : 
            [char] sprite plane (0-31) 
                      
 Output   : -
 
 Examples :
            SetEarlyClock(10);
 
 
================================================================================
5.7) UnsetEarlyClock

 Function :
            void UnsetEarlyClock(char plane)
                          
 Description:
            Disables the Early Clock. Restore the position of a sprite plane.
            
 Input    : 
            [char] sprite plane (0-31)
                      
 Output   : -
 
 Examples :
            UnsetEarlyClock(10);
 
 
--------------------------------------------------------------------------------